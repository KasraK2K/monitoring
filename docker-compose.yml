version: "3.8"
# https://github.com/vegasbrianc/prometheus/blob/master/docker-compose.yml

networks:
  monitoring:
    driver: bridge

services:
  # -------------------------------- Prometheus -------------------------------- #
  # url in localhost: http://host.docker.internal:9090                           #
  # ---------------------------------------------------------------------------- #
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    user: "root"
    restart: unless-stopped
    volumes:
      - ./volumes/prometheus/:/etc/prometheus/
      - ./volumes/prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "9090:9090"
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    #   - pushgateway:pushgateway
    depends_on:
      - cadvisor
    #   - pushgateway
    networks:
      - monitoring
    # deploy:
    #   placement:
    #     constraints:
    #       - node.hostname == ${HOSTNAME}

  # ------------------------------- Node Exporter ------------------------------ #
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      # - /:/host:ro,rslave
    command:
      - "--path.rootfs=/host"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - monitoring
    deploy:
      mode: global

  # ------------------------------- Alert Manager ------------------------------ #
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - 9093:9093
    volumes:
      - ./volumes/alertmanager/:/etc/alertmanager/
    networks:
      - monitoring
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
    # deploy:
    #   placement:
    #     constraints:
    #       - node.hostname == ${HOSTNAME}

  # --------------------------------- Cadvisor --------------------------------- #
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - monitoring
    deploy:
      mode: global

  # ---------------------------------- Grafana --------------------------------- #
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    user: "root"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./volumes/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./volumes/grafana/data:/var/lib/grafana
      - ./volumes/grafana/provisioning/:/etc/grafana/provisioning/
    # env_file:
    #   - ./grafana/config.monitoring
    networks:
      - monitoring
    restart: always
    environment:
      # increases the log level from info to debug
      - GF_LOG_LEVEL=debug
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource

  # pushgateway:
  #   image: prom/pushgateway
  #   restart: always
  #   expose:
  #     - 9091
  #   ports:
  #     - "9091:9091"
  #   networks:
  #     - back-tier
